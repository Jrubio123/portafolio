{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar base64 = require('base64-js');\nvar ieee754 = require('ieee754');\nvar isArray = require('isarray');\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nBuffer.poolSize = 8192; // not used by this implementation\n\nvar rootParent = {};\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\nfunction typedArraySupport() {\n  function Bar() {}\n  try {\n    var arr = new Uint8Array(1);\n    arr.foo = function () {\n      return 42;\n    };\n    arr.constructor = Bar;\n    return arr.foo() === 42 &&\n    // typed array instances can be augmented\n    arr.constructor === Bar &&\n    // constructor can be set\n    typeof arr.subarray === 'function' &&\n    // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer(arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1]);\n    return new Buffer(arg);\n  }\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0;\n    this.parent = undefined;\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg);\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8');\n  }\n\n  // Unusual.\n  return fromObject(this, arg);\n}\nfunction fromNumber(that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0;\n    }\n  }\n  return that;\n}\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0;\n  that = allocate(that, length);\n  that.write(string, encoding);\n  return that;\n}\nfunction fromObject(that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object);\n  if (isArray(object)) return fromArray(that, object);\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string');\n  }\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object);\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object);\n    }\n  }\n  if (object.length) return fromArrayLike(that, object);\n  return fromJsonObject(that, object);\n}\nfunction fromBuffer(that, buffer) {\n  var length = checked(buffer.length) | 0;\n  that = allocate(that, length);\n  buffer.copy(that, 0, 0, length);\n  return that;\n}\nfunction fromArray(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\nfunction fromArrayBuffer(that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength;\n    that = Buffer._augment(new Uint8Array(array));\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array));\n  }\n  return that;\n}\nfunction fromArrayLike(that, array) {\n  var length = checked(array.length) | 0;\n  that = allocate(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject(that, object) {\n  var array;\n  var length = 0;\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data;\n    length = checked(array.length) | 0;\n  }\n  that = allocate(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that;\n}\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined;\n  Buffer.prototype.parent = undefined;\n}\nfunction allocate(that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length));\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length;\n    that._isBuffer = true;\n  }\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1;\n  if (fromPool) that.parent = rootParent;\n  return that;\n}\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding);\n  var buf = new Buffer(subject, encoding);\n  delete buf.parent;\n  return buf;\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  var i = 0;\n  var len = Math.min(x, y);\n  while (i < len) {\n    if (a[i] !== b[i]) break;\n    ++i;\n  }\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.');\n  if (list.length === 0) {\n    return new Buffer(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length;\n    }\n  }\n  var buf = new Buffer(length);\n  var pos = 0;\n  for (i = 0; i < list.length; i++) {\n    var item = list[i];\n    item.copy(buf, pos);\n    pos += item.length;\n  }\n  return buf;\n};\nfunction byteLength(string, encoding) {\n  if (typeof string !== 'string') string = '' + string;\n  var len = string.length;\n  if (len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n  start = start | 0;\n  end = end === undefined || end === Infinity ? this.length : end | 0;\n  if (!encoding) encoding = 'utf8';\n  if (start < 0) start = 0;\n  if (end > this.length) end = this.length;\n  if (end <= start) return '';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'binary':\n        return binarySlice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>';\n};\nBuffer.prototype.compare = function compare(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return 0;\n  return Buffer.compare(this, b);\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff;else if (byteOffset < -0x80000000) byteOffset = -0x80000000;\n  byteOffset >>= 0;\n  if (this.length === 0) return -1;\n  if (byteOffset >= this.length) return -1;\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0);\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1; // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset);\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset);\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset);\n    }\n    return arrayIndexOf(this, [val], byteOffset);\n  }\n  function arrayIndexOf(arr, val, byteOffset) {\n    var foundIndex = -1;\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex;\n      } else {\n        foundIndex = -1;\n      }\n    }\n    return -1;\n  }\n  throw new TypeError('val must be string, number or Buffer');\n};\n\n// `get` is deprecated\nBuffer.prototype.get = function get(offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.');\n  return this.readUInt8(offset);\n};\n\n// `set` is deprecated\nBuffer.prototype.set = function set(v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.');\n  return this.writeUInt8(v, offset);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string');\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) throw new Error('Invalid hex string');\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction binaryWrite(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding;\n    encoding = offset;\n    offset = length | 0;\n    length = swap;\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n      case 'binary':\n        return binaryWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction binarySlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i]);\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end));\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start];\n    }\n  }\n  if (newBuf.length) newBuf.parent = this.parent || this;\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('value is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('index out of range');\n}\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = value < 0 ? 1 : 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = value < 0 ? 1 : 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4;\n};\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('index out of range');\n  if (offset < 0) throw new RangeError('index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  var i;\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart);\n  }\n  return len;\n};\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill(value, start, end) {\n  if (!value) value = 0;\n  if (!start) start = 0;\n  if (!end) end = this.length;\n  if (end < start) throw new RangeError('end < start');\n\n  // Fill 0 bytes; we're done\n  if (end === start) return;\n  if (this.length === 0) return;\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds');\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds');\n  var i;\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value;\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString());\n    var len = bytes.length;\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer() {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return new Buffer(this).buffer;\n    } else {\n      var buf = new Uint8Array(this.length);\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i];\n      }\n      return buf.buffer;\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser');\n  }\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype;\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment(arr) {\n  arr.constructor = Buffer;\n  arr._isBuffer = true;\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set;\n\n  // deprecated\n  arr.get = BP.get;\n  arr.set = BP.set;\n  arr.write = BP.write;\n  arr.toString = BP.toString;\n  arr.toLocaleString = BP.toString;\n  arr.toJSON = BP.toJSON;\n  arr.equals = BP.equals;\n  arr.compare = BP.compare;\n  arr.indexOf = BP.indexOf;\n  arr.copy = BP.copy;\n  arr.slice = BP.slice;\n  arr.readUIntLE = BP.readUIntLE;\n  arr.readUIntBE = BP.readUIntBE;\n  arr.readUInt8 = BP.readUInt8;\n  arr.readUInt16LE = BP.readUInt16LE;\n  arr.readUInt16BE = BP.readUInt16BE;\n  arr.readUInt32LE = BP.readUInt32LE;\n  arr.readUInt32BE = BP.readUInt32BE;\n  arr.readIntLE = BP.readIntLE;\n  arr.readIntBE = BP.readIntBE;\n  arr.readInt8 = BP.readInt8;\n  arr.readInt16LE = BP.readInt16LE;\n  arr.readInt16BE = BP.readInt16BE;\n  arr.readInt32LE = BP.readInt32LE;\n  arr.readInt32BE = BP.readInt32BE;\n  arr.readFloatLE = BP.readFloatLE;\n  arr.readFloatBE = BP.readFloatBE;\n  arr.readDoubleLE = BP.readDoubleLE;\n  arr.readDoubleBE = BP.readDoubleBE;\n  arr.writeUInt8 = BP.writeUInt8;\n  arr.writeUIntLE = BP.writeUIntLE;\n  arr.writeUIntBE = BP.writeUIntBE;\n  arr.writeUInt16LE = BP.writeUInt16LE;\n  arr.writeUInt16BE = BP.writeUInt16BE;\n  arr.writeUInt32LE = BP.writeUInt32LE;\n  arr.writeUInt32BE = BP.writeUInt32BE;\n  arr.writeIntLE = BP.writeIntLE;\n  arr.writeIntBE = BP.writeIntBE;\n  arr.writeInt8 = BP.writeInt8;\n  arr.writeInt16LE = BP.writeInt16LE;\n  arr.writeInt16BE = BP.writeInt16BE;\n  arr.writeInt32LE = BP.writeInt32LE;\n  arr.writeInt32BE = BP.writeInt32BE;\n  arr.writeFloatLE = BP.writeFloatLE;\n  arr.writeFloatBE = BP.writeFloatBE;\n  arr.writeDoubleLE = BP.writeDoubleLE;\n  arr.writeDoubleBE = BP.writeDoubleBE;\n  arr.fill = BP.fill;\n  arr.inspect = BP.inspect;\n  arr.toArrayBuffer = BP.toArrayBuffer;\n  return arr;\n};\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}","map":{"version":3,"names":["base64","require","ieee754","isArray","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","poolSize","rootParent","TYPED_ARRAY_SUPPORT","global","undefined","typedArraySupport","Bar","arr","Uint8Array","foo","constructor","subarray","byteLength","e","kMaxLength","arg","arguments","length","parent","fromNumber","fromString","fromObject","that","allocate","checked","i","string","encoding","write","object","isBuffer","fromBuffer","fromArray","TypeError","ArrayBuffer","buffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array","_augment","type","data","prototype","__proto__","_isBuffer","fromPool","RangeError","toString","subject","buf","b","compare","a","x","y","len","Math","min","isEncoding","String","toLowerCase","concat","list","pos","item","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","Infinity","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","apply","equals","inspect","str","max","match","join","indexOf","val","byteOffset","call","arrayIndexOf","foundIndex","get","offset","console","log","readUInt8","set","v","writeUInt8","hexWrite","Number","remaining","strLen","Error","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","isFinite","swap","toJSON","Array","slice","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","checkInt","value","writeUIntLE","writeUIntBE","floor","objectWriteUInt16","littleEndian","j","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","target","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","n","units","leadSurrogate","charCodeAt","byteArray","c","hi","lo","toByteArray","src","dst"],"sources":["C:/Users/Juan Pablo/Downloads/Cursos/portafolio/node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEhCG,OAAO,CAACC,MAAM,GAAGA,MAAM;AACvBD,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/BF,OAAO,CAACG,iBAAiB,GAAG,EAAE;AAC9BF,MAAM,CAACG,QAAQ,GAAG,IAAI,EAAC;;AAEvB,IAAIC,UAAU,GAAG,CAAC,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,MAAM,CAACK,mBAAmB,GAAGC,MAAM,CAACD,mBAAmB,KAAKE,SAAS,GACjED,MAAM,CAACD,mBAAmB,GAC1BG,iBAAiB,CAAC,CAAC;AAEvB,SAASA,iBAAiBA,CAAA,EAAI;EAC5B,SAASC,GAAGA,CAAA,EAAI,CAAC;EACjB,IAAI;IACF,IAAIC,GAAG,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;IAC3BD,GAAG,CAACE,GAAG,GAAG,YAAY;MAAE,OAAO,EAAE;IAAC,CAAC;IACnCF,GAAG,CAACG,WAAW,GAAGJ,GAAG;IACrB,OAAOC,GAAG,CAACE,GAAG,CAAC,CAAC,KAAK,EAAE;IAAI;IACvBF,GAAG,CAACG,WAAW,KAAKJ,GAAG;IAAI;IAC3B,OAAOC,GAAG,CAACI,QAAQ,KAAK,UAAU;IAAI;IACtCJ,GAAG,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,UAAU,KAAK,CAAC,EAAC;EAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF;AAEA,SAASC,UAAUA,CAAA,EAAI;EACrB,OAAOjB,MAAM,CAACK,mBAAmB,GAC7B,UAAU,GACV,UAAU;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASL,MAAMA,CAAEkB,GAAG,EAAE;EACpB,IAAI,EAAE,IAAI,YAAYlB,MAAM,CAAC,EAAE;IAC7B;IACA,IAAImB,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE,OAAO,IAAIpB,MAAM,CAACkB,GAAG,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC9D,OAAO,IAAInB,MAAM,CAACkB,GAAG,CAAC;EACxB;EAEA,IAAI,CAAClB,MAAM,CAACK,mBAAmB,EAAE;IAC/B,IAAI,CAACe,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,MAAM,GAAGd,SAAS;EACzB;;EAEA;EACA,IAAI,OAAOW,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOI,UAAU,CAAC,IAAI,EAAEJ,GAAG,CAAC;EAC9B;;EAEA;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAOK,UAAU,CAAC,IAAI,EAAEL,GAAG,EAAEC,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;EAC5E;;EAEA;EACA,OAAOK,UAAU,CAAC,IAAI,EAAEN,GAAG,CAAC;AAC9B;AAEA,SAASI,UAAUA,CAAEG,IAAI,EAAEL,MAAM,EAAE;EACjCK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGO,OAAO,CAACP,MAAM,CAAC,GAAG,CAAC,CAAC;EAC3D,IAAI,CAACpB,MAAM,CAACK,mBAAmB,EAAE;IAC/B,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,EAAE,EAAE;MAC/BH,IAAI,CAACG,CAAC,CAAC,GAAG,CAAC;IACb;EACF;EACA,OAAOH,IAAI;AACb;AAEA,SAASF,UAAUA,CAAEE,IAAI,EAAEI,MAAM,EAAEC,QAAQ,EAAE;EAC3C,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,EAAE,EAAEA,QAAQ,GAAG,MAAM;;EAEtE;EACA,IAAIV,MAAM,GAAGL,UAAU,CAACc,MAAM,EAAEC,QAAQ,CAAC,GAAG,CAAC;EAC7CL,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAE7BK,IAAI,CAACM,KAAK,CAACF,MAAM,EAAEC,QAAQ,CAAC;EAC5B,OAAOL,IAAI;AACb;AAEA,SAASD,UAAUA,CAAEC,IAAI,EAAEO,MAAM,EAAE;EACjC,IAAIhC,MAAM,CAACiC,QAAQ,CAACD,MAAM,CAAC,EAAE,OAAOE,UAAU,CAACT,IAAI,EAAEO,MAAM,CAAC;EAE5D,IAAIlC,OAAO,CAACkC,MAAM,CAAC,EAAE,OAAOG,SAAS,CAACV,IAAI,EAAEO,MAAM,CAAC;EAEnD,IAAIA,MAAM,IAAI,IAAI,EAAE;IAClB,MAAM,IAAII,SAAS,CAAC,iDAAiD,CAAC;EACxE;EAEA,IAAI,OAAOC,WAAW,KAAK,WAAW,EAAE;IACtC,IAAIL,MAAM,CAACM,MAAM,YAAYD,WAAW,EAAE;MACxC,OAAOE,cAAc,CAACd,IAAI,EAAEO,MAAM,CAAC;IACrC;IACA,IAAIA,MAAM,YAAYK,WAAW,EAAE;MACjC,OAAOG,eAAe,CAACf,IAAI,EAAEO,MAAM,CAAC;IACtC;EACF;EAEA,IAAIA,MAAM,CAACZ,MAAM,EAAE,OAAOqB,aAAa,CAAChB,IAAI,EAAEO,MAAM,CAAC;EAErD,OAAOU,cAAc,CAACjB,IAAI,EAAEO,MAAM,CAAC;AACrC;AAEA,SAASE,UAAUA,CAAET,IAAI,EAAEa,MAAM,EAAE;EACjC,IAAIlB,MAAM,GAAGO,OAAO,CAACW,MAAM,CAAClB,MAAM,CAAC,GAAG,CAAC;EACvCK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAC7BkB,MAAM,CAACK,IAAI,CAAClB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEL,MAAM,CAAC;EAC/B,OAAOK,IAAI;AACb;AAEA,SAASU,SAASA,CAAEV,IAAI,EAAEmB,KAAK,EAAE;EAC/B,IAAIxB,MAAM,GAAGO,OAAO,CAACiB,KAAK,CAACxB,MAAM,CAAC,GAAG,CAAC;EACtCK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAC7B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;IAClCH,IAAI,CAACG,CAAC,CAAC,GAAGgB,KAAK,CAAChB,CAAC,CAAC,GAAG,GAAG;EAC1B;EACA,OAAOH,IAAI;AACb;;AAEA;AACA,SAASc,cAAcA,CAAEd,IAAI,EAAEmB,KAAK,EAAE;EACpC,IAAIxB,MAAM,GAAGO,OAAO,CAACiB,KAAK,CAACxB,MAAM,CAAC,GAAG,CAAC;EACtCK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAC7B;EACA;EACA;EACA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;IAClCH,IAAI,CAACG,CAAC,CAAC,GAAGgB,KAAK,CAAChB,CAAC,CAAC,GAAG,GAAG;EAC1B;EACA,OAAOH,IAAI;AACb;AAEA,SAASe,eAAeA,CAAEf,IAAI,EAAEmB,KAAK,EAAE;EACrC,IAAI5C,MAAM,CAACK,mBAAmB,EAAE;IAC9B;IACAuC,KAAK,CAAC7B,UAAU;IAChBU,IAAI,GAAGzB,MAAM,CAAC6C,QAAQ,CAAC,IAAIlC,UAAU,CAACiC,KAAK,CAAC,CAAC;EAC/C,CAAC,MAAM;IACL;IACAnB,IAAI,GAAGc,cAAc,CAACd,IAAI,EAAE,IAAId,UAAU,CAACiC,KAAK,CAAC,CAAC;EACpD;EACA,OAAOnB,IAAI;AACb;AAEA,SAASgB,aAAaA,CAAEhB,IAAI,EAAEmB,KAAK,EAAE;EACnC,IAAIxB,MAAM,GAAGO,OAAO,CAACiB,KAAK,CAACxB,MAAM,CAAC,GAAG,CAAC;EACtCK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAC7B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;IAClCH,IAAI,CAACG,CAAC,CAAC,GAAGgB,KAAK,CAAChB,CAAC,CAAC,GAAG,GAAG;EAC1B;EACA,OAAOH,IAAI;AACb;;AAEA;AACA;AACA,SAASiB,cAAcA,CAAEjB,IAAI,EAAEO,MAAM,EAAE;EACrC,IAAIY,KAAK;EACT,IAAIxB,MAAM,GAAG,CAAC;EAEd,IAAIY,MAAM,CAACc,IAAI,KAAK,QAAQ,IAAIhD,OAAO,CAACkC,MAAM,CAACe,IAAI,CAAC,EAAE;IACpDH,KAAK,GAAGZ,MAAM,CAACe,IAAI;IACnB3B,MAAM,GAAGO,OAAO,CAACiB,KAAK,CAACxB,MAAM,CAAC,GAAG,CAAC;EACpC;EACAK,IAAI,GAAGC,QAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC;EAE7B,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;IAClCH,IAAI,CAACG,CAAC,CAAC,GAAGgB,KAAK,CAAChB,CAAC,CAAC,GAAG,GAAG;EAC1B;EACA,OAAOH,IAAI;AACb;AAEA,IAAIzB,MAAM,CAACK,mBAAmB,EAAE;EAC9BL,MAAM,CAACgD,SAAS,CAACC,SAAS,GAAGtC,UAAU,CAACqC,SAAS;EACjDhD,MAAM,CAACiD,SAAS,GAAGtC,UAAU;AAC/B,CAAC,MAAM;EACL;EACAX,MAAM,CAACgD,SAAS,CAAC5B,MAAM,GAAGb,SAAS;EACnCP,MAAM,CAACgD,SAAS,CAAC3B,MAAM,GAAGd,SAAS;AACrC;AAEA,SAASmB,QAAQA,CAAED,IAAI,EAAEL,MAAM,EAAE;EAC/B,IAAIpB,MAAM,CAACK,mBAAmB,EAAE;IAC9B;IACAoB,IAAI,GAAGzB,MAAM,CAAC6C,QAAQ,CAAC,IAAIlC,UAAU,CAACS,MAAM,CAAC,CAAC;IAC9CK,IAAI,CAACwB,SAAS,GAAGjD,MAAM,CAACgD,SAAS;EACnC,CAAC,MAAM;IACL;IACAvB,IAAI,CAACL,MAAM,GAAGA,MAAM;IACpBK,IAAI,CAACyB,SAAS,GAAG,IAAI;EACvB;EAEA,IAAIC,QAAQ,GAAG/B,MAAM,KAAK,CAAC,IAAIA,MAAM,IAAIpB,MAAM,CAACG,QAAQ,KAAK,CAAC;EAC9D,IAAIgD,QAAQ,EAAE1B,IAAI,CAACJ,MAAM,GAAGjB,UAAU;EAEtC,OAAOqB,IAAI;AACb;AAEA,SAASE,OAAOA,CAAEP,MAAM,EAAE;EACxB;EACA;EACA,IAAIA,MAAM,IAAIH,UAAU,CAAC,CAAC,EAAE;IAC1B,MAAM,IAAImC,UAAU,CAAC,iDAAiD,GACjD,UAAU,GAAGnC,UAAU,CAAC,CAAC,CAACoC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;EACzE;EACA,OAAOjC,MAAM,GAAG,CAAC;AACnB;AAEA,SAASnB,UAAUA,CAAEqD,OAAO,EAAExB,QAAQ,EAAE;EACtC,IAAI,EAAE,IAAI,YAAY7B,UAAU,CAAC,EAAE,OAAO,IAAIA,UAAU,CAACqD,OAAO,EAAExB,QAAQ,CAAC;EAE3E,IAAIyB,GAAG,GAAG,IAAIvD,MAAM,CAACsD,OAAO,EAAExB,QAAQ,CAAC;EACvC,OAAOyB,GAAG,CAAClC,MAAM;EACjB,OAAOkC,GAAG;AACZ;AAEAvD,MAAM,CAACiC,QAAQ,GAAG,SAASA,QAAQA,CAAEuB,CAAC,EAAE;EACtC,OAAO,CAAC,EAAEA,CAAC,IAAI,IAAI,IAAIA,CAAC,CAACN,SAAS,CAAC;AACrC,CAAC;AAEDlD,MAAM,CAACyD,OAAO,GAAG,SAASA,OAAOA,CAAEC,CAAC,EAAEF,CAAC,EAAE;EACvC,IAAI,CAACxD,MAAM,CAACiC,QAAQ,CAACyB,CAAC,CAAC,IAAI,CAAC1D,MAAM,CAACiC,QAAQ,CAACuB,CAAC,CAAC,EAAE;IAC9C,MAAM,IAAIpB,SAAS,CAAC,2BAA2B,CAAC;EAClD;EAEA,IAAIsB,CAAC,KAAKF,CAAC,EAAE,OAAO,CAAC;EAErB,IAAIG,CAAC,GAAGD,CAAC,CAACtC,MAAM;EAChB,IAAIwC,CAAC,GAAGJ,CAAC,CAACpC,MAAM;EAEhB,IAAIQ,CAAC,GAAG,CAAC;EACT,IAAIiC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACJ,CAAC,EAAEC,CAAC,CAAC;EACxB,OAAOhC,CAAC,GAAGiC,GAAG,EAAE;IACd,IAAIH,CAAC,CAAC9B,CAAC,CAAC,KAAK4B,CAAC,CAAC5B,CAAC,CAAC,EAAE;IAEnB,EAAEA,CAAC;EACL;EAEA,IAAIA,CAAC,KAAKiC,GAAG,EAAE;IACbF,CAAC,GAAGD,CAAC,CAAC9B,CAAC,CAAC;IACRgC,CAAC,GAAGJ,CAAC,CAAC5B,CAAC,CAAC;EACV;EAEA,IAAI+B,CAAC,GAAGC,CAAC,EAAE,OAAO,CAAC,CAAC;EACpB,IAAIA,CAAC,GAAGD,CAAC,EAAE,OAAO,CAAC;EACnB,OAAO,CAAC;AACV,CAAC;AAED3D,MAAM,CAACgE,UAAU,GAAG,SAASA,UAAUA,CAAElC,QAAQ,EAAE;EACjD,QAAQmC,MAAM,CAACnC,QAAQ,CAAC,CAACoC,WAAW,CAAC,CAAC;IACpC,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,OAAO;IACZ,KAAK,QAAQ;IACb,KAAK,QAAQ;IACb,KAAK,KAAK;IACV,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,SAAS;IACd,KAAK,UAAU;MACb,OAAO,IAAI;IACb;MACE,OAAO,KAAK;EAChB;AACF,CAAC;AAEDlE,MAAM,CAACmE,MAAM,GAAG,SAASA,MAAMA,CAAEC,IAAI,EAAEhD,MAAM,EAAE;EAC7C,IAAI,CAACtB,OAAO,CAACsE,IAAI,CAAC,EAAE,MAAM,IAAIhC,SAAS,CAAC,4CAA4C,CAAC;EAErF,IAAIgC,IAAI,CAAChD,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,IAAIpB,MAAM,CAAC,CAAC,CAAC;EACtB;EAEA,IAAI4B,CAAC;EACL,IAAIR,MAAM,KAAKb,SAAS,EAAE;IACxBa,MAAM,GAAG,CAAC;IACV,KAAKQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,IAAI,CAAChD,MAAM,EAAEQ,CAAC,EAAE,EAAE;MAChCR,MAAM,IAAIgD,IAAI,CAACxC,CAAC,CAAC,CAACR,MAAM;IAC1B;EACF;EAEA,IAAImC,GAAG,GAAG,IAAIvD,MAAM,CAACoB,MAAM,CAAC;EAC5B,IAAIiD,GAAG,GAAG,CAAC;EACX,KAAKzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,IAAI,CAAChD,MAAM,EAAEQ,CAAC,EAAE,EAAE;IAChC,IAAI0C,IAAI,GAAGF,IAAI,CAACxC,CAAC,CAAC;IAClB0C,IAAI,CAAC3B,IAAI,CAACY,GAAG,EAAEc,GAAG,CAAC;IACnBA,GAAG,IAAIC,IAAI,CAAClD,MAAM;EACpB;EACA,OAAOmC,GAAG;AACZ,CAAC;AAED,SAASxC,UAAUA,CAAEc,MAAM,EAAEC,QAAQ,EAAE;EACrC,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAEA,MAAM,GAAG,EAAE,GAAGA,MAAM;EAEpD,IAAIgC,GAAG,GAAGhC,MAAM,CAACT,MAAM;EACvB,IAAIyC,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC;;EAEvB;EACA,IAAIU,WAAW,GAAG,KAAK;EACvB,SAAS;IACP,QAAQzC,QAAQ;MACd,KAAK,OAAO;MACZ,KAAK,QAAQ;MACb;MACA,KAAK,KAAK;MACV,KAAK,MAAM;QACT,OAAO+B,GAAG;MACZ,KAAK,MAAM;MACX,KAAK,OAAO;QACV,OAAOW,WAAW,CAAC3C,MAAM,CAAC,CAACT,MAAM;MACnC,KAAK,MAAM;MACX,KAAK,OAAO;MACZ,KAAK,SAAS;MACd,KAAK,UAAU;QACb,OAAOyC,GAAG,GAAG,CAAC;MAChB,KAAK,KAAK;QACR,OAAOA,GAAG,KAAK,CAAC;MAClB,KAAK,QAAQ;QACX,OAAOY,aAAa,CAAC5C,MAAM,CAAC,CAACT,MAAM;MACrC;QACE,IAAImD,WAAW,EAAE,OAAOC,WAAW,CAAC3C,MAAM,CAAC,CAACT,MAAM,EAAC;QACnDU,QAAQ,GAAG,CAAC,EAAE,GAAGA,QAAQ,EAAEoC,WAAW,CAAC,CAAC;QACxCK,WAAW,GAAG,IAAI;IACtB;EACF;AACF;AACAvE,MAAM,CAACe,UAAU,GAAGA,UAAU;AAE9B,SAAS2D,YAAYA,CAAE5C,QAAQ,EAAE6C,KAAK,EAAEC,GAAG,EAAE;EAC3C,IAAIL,WAAW,GAAG,KAAK;EAEvBI,KAAK,GAAGA,KAAK,GAAG,CAAC;EACjBC,GAAG,GAAGA,GAAG,KAAKrE,SAAS,IAAIqE,GAAG,KAAKC,QAAQ,GAAG,IAAI,CAACzD,MAAM,GAAGwD,GAAG,GAAG,CAAC;EAEnE,IAAI,CAAC9C,QAAQ,EAAEA,QAAQ,GAAG,MAAM;EAChC,IAAI6C,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC;EACxB,IAAIC,GAAG,GAAG,IAAI,CAACxD,MAAM,EAAEwD,GAAG,GAAG,IAAI,CAACxD,MAAM;EACxC,IAAIwD,GAAG,IAAID,KAAK,EAAE,OAAO,EAAE;EAE3B,OAAO,IAAI,EAAE;IACX,QAAQ7C,QAAQ;MACd,KAAK,KAAK;QACR,OAAOgD,QAAQ,CAAC,IAAI,EAAEH,KAAK,EAAEC,GAAG,CAAC;MAEnC,KAAK,MAAM;MACX,KAAK,OAAO;QACV,OAAOG,SAAS,CAAC,IAAI,EAAEJ,KAAK,EAAEC,GAAG,CAAC;MAEpC,KAAK,OAAO;QACV,OAAOI,UAAU,CAAC,IAAI,EAAEL,KAAK,EAAEC,GAAG,CAAC;MAErC,KAAK,QAAQ;QACX,OAAOK,WAAW,CAAC,IAAI,EAAEN,KAAK,EAAEC,GAAG,CAAC;MAEtC,KAAK,QAAQ;QACX,OAAOM,WAAW,CAAC,IAAI,EAAEP,KAAK,EAAEC,GAAG,CAAC;MAEtC,KAAK,MAAM;MACX,KAAK,OAAO;MACZ,KAAK,SAAS;MACd,KAAK,UAAU;QACb,OAAOO,YAAY,CAAC,IAAI,EAAER,KAAK,EAAEC,GAAG,CAAC;MAEvC;QACE,IAAIL,WAAW,EAAE,MAAM,IAAInC,SAAS,CAAC,oBAAoB,GAAGN,QAAQ,CAAC;QACrEA,QAAQ,GAAG,CAACA,QAAQ,GAAG,EAAE,EAAEoC,WAAW,CAAC,CAAC;QACxCK,WAAW,GAAG,IAAI;IACtB;EACF;AACF;AAEAvE,MAAM,CAACgD,SAAS,CAACK,QAAQ,GAAG,SAASA,QAAQA,CAAA,EAAI;EAC/C,IAAIjC,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,CAAC;EAC5B,IAAIA,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;EAC3B,IAAID,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO2D,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE3D,MAAM,CAAC;EAC7D,OAAOsD,YAAY,CAACU,KAAK,CAAC,IAAI,EAAEjE,SAAS,CAAC;AAC5C,CAAC;AAEDnB,MAAM,CAACgD,SAAS,CAACqC,MAAM,GAAG,SAASA,MAAMA,CAAE7B,CAAC,EAAE;EAC5C,IAAI,CAACxD,MAAM,CAACiC,QAAQ,CAACuB,CAAC,CAAC,EAAE,MAAM,IAAIpB,SAAS,CAAC,2BAA2B,CAAC;EACzE,IAAI,IAAI,KAAKoB,CAAC,EAAE,OAAO,IAAI;EAC3B,OAAOxD,MAAM,CAACyD,OAAO,CAAC,IAAI,EAAED,CAAC,CAAC,KAAK,CAAC;AACtC,CAAC;AAEDxD,MAAM,CAACgD,SAAS,CAACsC,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAI;EAC7C,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,GAAG,GAAGzF,OAAO,CAACG,iBAAiB;EACnC,IAAI,IAAI,CAACkB,MAAM,GAAG,CAAC,EAAE;IACnBmE,GAAG,GAAG,IAAI,CAAClC,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAEmC,GAAG,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAC3D,IAAI,IAAI,CAACtE,MAAM,GAAGoE,GAAG,EAAED,GAAG,IAAI,OAAO;EACvC;EACA,OAAO,UAAU,GAAGA,GAAG,GAAG,GAAG;AAC/B,CAAC;AAEDvF,MAAM,CAACgD,SAAS,CAACS,OAAO,GAAG,SAASA,OAAOA,CAAED,CAAC,EAAE;EAC9C,IAAI,CAACxD,MAAM,CAACiC,QAAQ,CAACuB,CAAC,CAAC,EAAE,MAAM,IAAIpB,SAAS,CAAC,2BAA2B,CAAC;EACzE,IAAI,IAAI,KAAKoB,CAAC,EAAE,OAAO,CAAC;EACxB,OAAOxD,MAAM,CAACyD,OAAO,CAAC,IAAI,EAAED,CAAC,CAAC;AAChC,CAAC;AAEDxD,MAAM,CAACgD,SAAS,CAAC2C,OAAO,GAAG,SAASA,OAAOA,CAAEC,GAAG,EAAEC,UAAU,EAAE;EAC5D,IAAIA,UAAU,GAAG,UAAU,EAAEA,UAAU,GAAG,UAAU,MAC/C,IAAIA,UAAU,GAAG,CAAC,UAAU,EAAEA,UAAU,GAAG,CAAC,UAAU;EAC3DA,UAAU,KAAK,CAAC;EAEhB,IAAI,IAAI,CAACzE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;EAChC,IAAIyE,UAAU,IAAI,IAAI,CAACzE,MAAM,EAAE,OAAO,CAAC,CAAC;;EAExC;EACA,IAAIyE,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG/B,IAAI,CAAC0B,GAAG,CAAC,IAAI,CAACpE,MAAM,GAAGyE,UAAU,EAAE,CAAC,CAAC;EAEtE,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC3B,IAAIA,GAAG,CAACxE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,EAAC;IAChC,OAAO6C,MAAM,CAACjB,SAAS,CAAC2C,OAAO,CAACG,IAAI,CAAC,IAAI,EAAEF,GAAG,EAAEC,UAAU,CAAC;EAC7D;EACA,IAAI7F,MAAM,CAACiC,QAAQ,CAAC2D,GAAG,CAAC,EAAE;IACxB,OAAOG,YAAY,CAAC,IAAI,EAAEH,GAAG,EAAEC,UAAU,CAAC;EAC5C;EACA,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;IAC3B,IAAI5F,MAAM,CAACK,mBAAmB,IAAIM,UAAU,CAACqC,SAAS,CAAC2C,OAAO,KAAK,UAAU,EAAE;MAC7E,OAAOhF,UAAU,CAACqC,SAAS,CAAC2C,OAAO,CAACG,IAAI,CAAC,IAAI,EAAEF,GAAG,EAAEC,UAAU,CAAC;IACjE;IACA,OAAOE,YAAY,CAAC,IAAI,EAAE,CAAEH,GAAG,CAAE,EAAEC,UAAU,CAAC;EAChD;EAEA,SAASE,YAAYA,CAAErF,GAAG,EAAEkF,GAAG,EAAEC,UAAU,EAAE;IAC3C,IAAIG,UAAU,GAAG,CAAC,CAAC;IACnB,KAAK,IAAIpE,CAAC,GAAG,CAAC,EAAEiE,UAAU,GAAGjE,CAAC,GAAGlB,GAAG,CAACU,MAAM,EAAEQ,CAAC,EAAE,EAAE;MAChD,IAAIlB,GAAG,CAACmF,UAAU,GAAGjE,CAAC,CAAC,KAAKgE,GAAG,CAACI,UAAU,KAAK,CAAC,CAAC,GAAG,CAAC,GAAGpE,CAAC,GAAGoE,UAAU,CAAC,EAAE;QACvE,IAAIA,UAAU,KAAK,CAAC,CAAC,EAAEA,UAAU,GAAGpE,CAAC;QACrC,IAAIA,CAAC,GAAGoE,UAAU,GAAG,CAAC,KAAKJ,GAAG,CAACxE,MAAM,EAAE,OAAOyE,UAAU,GAAGG,UAAU;MACvE,CAAC,MAAM;QACLA,UAAU,GAAG,CAAC,CAAC;MACjB;IACF;IACA,OAAO,CAAC,CAAC;EACX;EAEA,MAAM,IAAI5D,SAAS,CAAC,sCAAsC,CAAC;AAC7D,CAAC;;AAED;AACApC,MAAM,CAACgD,SAAS,CAACiD,GAAG,GAAG,SAASA,GAAGA,CAAEC,MAAM,EAAE;EAC3CC,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;EACxE,OAAO,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;AAC/B,CAAC;;AAED;AACAlG,MAAM,CAACgD,SAAS,CAACsD,GAAG,GAAG,SAASA,GAAGA,CAAEC,CAAC,EAAEL,MAAM,EAAE;EAC9CC,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;EACxE,OAAO,IAAI,CAACI,UAAU,CAACD,CAAC,EAAEL,MAAM,CAAC;AACnC,CAAC;AAED,SAASO,QAAQA,CAAElD,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EAC9C8E,MAAM,GAAGQ,MAAM,CAACR,MAAM,CAAC,IAAI,CAAC;EAC5B,IAAIS,SAAS,GAAGpD,GAAG,CAACnC,MAAM,GAAG8E,MAAM;EACnC,IAAI,CAAC9E,MAAM,EAAE;IACXA,MAAM,GAAGuF,SAAS;EACpB,CAAC,MAAM;IACLvF,MAAM,GAAGsF,MAAM,CAACtF,MAAM,CAAC;IACvB,IAAIA,MAAM,GAAGuF,SAAS,EAAE;MACtBvF,MAAM,GAAGuF,SAAS;IACpB;EACF;;EAEA;EACA,IAAIC,MAAM,GAAG/E,MAAM,CAACT,MAAM;EAC1B,IAAIwF,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAE3D,IAAIzF,MAAM,GAAGwF,MAAM,GAAG,CAAC,EAAE;IACvBxF,MAAM,GAAGwF,MAAM,GAAG,CAAC;EACrB;EACA,KAAK,IAAIhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,EAAE,EAAE;IAC/B,IAAIkF,MAAM,GAAGC,QAAQ,CAAClF,MAAM,CAACmF,MAAM,CAACpF,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IAClD,IAAIqF,KAAK,CAACH,MAAM,CAAC,EAAE,MAAM,IAAID,KAAK,CAAC,oBAAoB,CAAC;IACxDtD,GAAG,CAAC2C,MAAM,GAAGtE,CAAC,CAAC,GAAGkF,MAAM;EAC1B;EACA,OAAOlF,CAAC;AACV;AAEA,SAASsF,SAASA,CAAE3D,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EAC/C,OAAO+F,UAAU,CAAC3C,WAAW,CAAC3C,MAAM,EAAE0B,GAAG,CAACnC,MAAM,GAAG8E,MAAM,CAAC,EAAE3C,GAAG,EAAE2C,MAAM,EAAE9E,MAAM,CAAC;AAClF;AAEA,SAASgG,UAAUA,CAAE7D,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EAChD,OAAO+F,UAAU,CAACE,YAAY,CAACxF,MAAM,CAAC,EAAE0B,GAAG,EAAE2C,MAAM,EAAE9E,MAAM,CAAC;AAC9D;AAEA,SAASkG,WAAWA,CAAE/D,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EACjD,OAAOgG,UAAU,CAAC7D,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;AAChD;AAEA,SAASmG,WAAWA,CAAEhE,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EACjD,OAAO+F,UAAU,CAAC1C,aAAa,CAAC5C,MAAM,CAAC,EAAE0B,GAAG,EAAE2C,MAAM,EAAE9E,MAAM,CAAC;AAC/D;AAEA,SAASoG,SAASA,CAAEjE,GAAG,EAAE1B,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAE;EAC/C,OAAO+F,UAAU,CAACM,cAAc,CAAC5F,MAAM,EAAE0B,GAAG,CAACnC,MAAM,GAAG8E,MAAM,CAAC,EAAE3C,GAAG,EAAE2C,MAAM,EAAE9E,MAAM,CAAC;AACrF;AAEApB,MAAM,CAACgD,SAAS,CAACjB,KAAK,GAAG,SAASA,KAAKA,CAAEF,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,EAAEU,QAAQ,EAAE;EACzE;EACA,IAAIoE,MAAM,KAAK3F,SAAS,EAAE;IACxBuB,QAAQ,GAAG,MAAM;IACjBV,MAAM,GAAG,IAAI,CAACA,MAAM;IACpB8E,MAAM,GAAG,CAAC;IACZ;EACA,CAAC,MAAM,IAAI9E,MAAM,KAAKb,SAAS,IAAI,OAAO2F,MAAM,KAAK,QAAQ,EAAE;IAC7DpE,QAAQ,GAAGoE,MAAM;IACjB9E,MAAM,GAAG,IAAI,CAACA,MAAM;IACpB8E,MAAM,GAAG,CAAC;IACZ;EACA,CAAC,MAAM,IAAIwB,QAAQ,CAACxB,MAAM,CAAC,EAAE;IAC3BA,MAAM,GAAGA,MAAM,GAAG,CAAC;IACnB,IAAIwB,QAAQ,CAACtG,MAAM,CAAC,EAAE;MACpBA,MAAM,GAAGA,MAAM,GAAG,CAAC;MACnB,IAAIU,QAAQ,KAAKvB,SAAS,EAAEuB,QAAQ,GAAG,MAAM;IAC/C,CAAC,MAAM;MACLA,QAAQ,GAAGV,MAAM;MACjBA,MAAM,GAAGb,SAAS;IACpB;IACF;EACA,CAAC,MAAM;IACL,IAAIoH,IAAI,GAAG7F,QAAQ;IACnBA,QAAQ,GAAGoE,MAAM;IACjBA,MAAM,GAAG9E,MAAM,GAAG,CAAC;IACnBA,MAAM,GAAGuG,IAAI;EACf;EAEA,IAAIhB,SAAS,GAAG,IAAI,CAACvF,MAAM,GAAG8E,MAAM;EACpC,IAAI9E,MAAM,KAAKb,SAAS,IAAIa,MAAM,GAAGuF,SAAS,EAAEvF,MAAM,GAAGuF,SAAS;EAElE,IAAK9E,MAAM,CAACT,MAAM,GAAG,CAAC,KAAKA,MAAM,GAAG,CAAC,IAAI8E,MAAM,GAAG,CAAC,CAAC,IAAKA,MAAM,GAAG,IAAI,CAAC9E,MAAM,EAAE;IAC7E,MAAM,IAAIgC,UAAU,CAAC,wCAAwC,CAAC;EAChE;EAEA,IAAI,CAACtB,QAAQ,EAAEA,QAAQ,GAAG,MAAM;EAEhC,IAAIyC,WAAW,GAAG,KAAK;EACvB,SAAS;IACP,QAAQzC,QAAQ;MACd,KAAK,KAAK;QACR,OAAO2E,QAAQ,CAAC,IAAI,EAAE5E,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAE/C,KAAK,MAAM;MACX,KAAK,OAAO;QACV,OAAO8F,SAAS,CAAC,IAAI,EAAErF,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAEhD,KAAK,OAAO;QACV,OAAOgG,UAAU,CAAC,IAAI,EAAEvF,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAEjD,KAAK,QAAQ;QACX,OAAOkG,WAAW,CAAC,IAAI,EAAEzF,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAElD,KAAK,QAAQ;QACX;QACA,OAAOmG,WAAW,CAAC,IAAI,EAAE1F,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAElD,KAAK,MAAM;MACX,KAAK,OAAO;MACZ,KAAK,SAAS;MACd,KAAK,UAAU;QACb,OAAOoG,SAAS,CAAC,IAAI,EAAE3F,MAAM,EAAEqE,MAAM,EAAE9E,MAAM,CAAC;MAEhD;QACE,IAAImD,WAAW,EAAE,MAAM,IAAInC,SAAS,CAAC,oBAAoB,GAAGN,QAAQ,CAAC;QACrEA,QAAQ,GAAG,CAAC,EAAE,GAAGA,QAAQ,EAAEoC,WAAW,CAAC,CAAC;QACxCK,WAAW,GAAG,IAAI;IACtB;EACF;AACF,CAAC;AAEDvE,MAAM,CAACgD,SAAS,CAAC4E,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAI;EAC3C,OAAO;IACL9E,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE8E,KAAK,CAAC7E,SAAS,CAAC8E,KAAK,CAAChC,IAAI,CAAC,IAAI,CAACiC,IAAI,IAAI,IAAI,EAAE,CAAC;EACvD,CAAC;AACH,CAAC;AAED,SAAS7C,WAAWA,CAAE3B,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EACrC,IAAID,KAAK,KAAK,CAAC,IAAIC,GAAG,KAAKrB,GAAG,CAACnC,MAAM,EAAE;IACrC,OAAOzB,MAAM,CAACqI,aAAa,CAACzE,GAAG,CAAC;EAClC,CAAC,MAAM;IACL,OAAO5D,MAAM,CAACqI,aAAa,CAACzE,GAAG,CAACuE,KAAK,CAACnD,KAAK,EAAEC,GAAG,CAAC,CAAC;EACpD;AACF;AAEA,SAASG,SAASA,CAAExB,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EACnCA,GAAG,GAAGd,IAAI,CAACC,GAAG,CAACR,GAAG,CAACnC,MAAM,EAAEwD,GAAG,CAAC;EAC/B,IAAIqD,GAAG,GAAG,EAAE;EAEZ,IAAIrG,CAAC,GAAG+C,KAAK;EACb,OAAO/C,CAAC,GAAGgD,GAAG,EAAE;IACd,IAAIsD,SAAS,GAAG3E,GAAG,CAAC3B,CAAC,CAAC;IACtB,IAAIuG,SAAS,GAAG,IAAI;IACpB,IAAIC,gBAAgB,GAAIF,SAAS,GAAG,IAAI,GAAI,CAAC,GACxCA,SAAS,GAAG,IAAI,GAAI,CAAC,GACrBA,SAAS,GAAG,IAAI,GAAI,CAAC,GACtB,CAAC;IAEL,IAAItG,CAAC,GAAGwG,gBAAgB,IAAIxD,GAAG,EAAE;MAC/B,IAAIyD,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,aAAa;MAEpD,QAAQJ,gBAAgB;QACtB,KAAK,CAAC;UACJ,IAAIF,SAAS,GAAG,IAAI,EAAE;YACpBC,SAAS,GAAGD,SAAS;UACvB;UACA;QACF,KAAK,CAAC;UACJG,UAAU,GAAG9E,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACvB,IAAI,CAACyG,UAAU,GAAG,IAAI,MAAM,IAAI,EAAE;YAChCG,aAAa,GAAG,CAACN,SAAS,GAAG,IAAI,KAAK,GAAG,GAAIG,UAAU,GAAG,IAAK;YAC/D,IAAIG,aAAa,GAAG,IAAI,EAAE;cACxBL,SAAS,GAAGK,aAAa;YAC3B;UACF;UACA;QACF,KAAK,CAAC;UACJH,UAAU,GAAG9E,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACvB0G,SAAS,GAAG/E,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACtB,IAAI,CAACyG,UAAU,GAAG,IAAI,MAAM,IAAI,IAAI,CAACC,SAAS,GAAG,IAAI,MAAM,IAAI,EAAE;YAC/DE,aAAa,GAAG,CAACN,SAAS,GAAG,GAAG,KAAK,GAAG,GAAG,CAACG,UAAU,GAAG,IAAI,KAAK,GAAG,GAAIC,SAAS,GAAG,IAAK;YAC1F,IAAIE,aAAa,GAAG,KAAK,KAAKA,aAAa,GAAG,MAAM,IAAIA,aAAa,GAAG,MAAM,CAAC,EAAE;cAC/EL,SAAS,GAAGK,aAAa;YAC3B;UACF;UACA;QACF,KAAK,CAAC;UACJH,UAAU,GAAG9E,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACvB0G,SAAS,GAAG/E,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACtB2G,UAAU,GAAGhF,GAAG,CAAC3B,CAAC,GAAG,CAAC,CAAC;UACvB,IAAI,CAACyG,UAAU,GAAG,IAAI,MAAM,IAAI,IAAI,CAACC,SAAS,GAAG,IAAI,MAAM,IAAI,IAAI,CAACC,UAAU,GAAG,IAAI,MAAM,IAAI,EAAE;YAC/FC,aAAa,GAAG,CAACN,SAAS,GAAG,GAAG,KAAK,IAAI,GAAG,CAACG,UAAU,GAAG,IAAI,KAAK,GAAG,GAAG,CAACC,SAAS,GAAG,IAAI,KAAK,GAAG,GAAIC,UAAU,GAAG,IAAK;YACxH,IAAIC,aAAa,GAAG,MAAM,IAAIA,aAAa,GAAG,QAAQ,EAAE;cACtDL,SAAS,GAAGK,aAAa;YAC3B;UACF;MACJ;IACF;IAEA,IAAIL,SAAS,KAAK,IAAI,EAAE;MACtB;MACA;MACAA,SAAS,GAAG,MAAM;MAClBC,gBAAgB,GAAG,CAAC;IACtB,CAAC,MAAM,IAAID,SAAS,GAAG,MAAM,EAAE;MAC7B;MACAA,SAAS,IAAI,OAAO;MACpBF,GAAG,CAACQ,IAAI,CAACN,SAAS,KAAK,EAAE,GAAG,KAAK,GAAG,MAAM,CAAC;MAC3CA,SAAS,GAAG,MAAM,GAAGA,SAAS,GAAG,KAAK;IACxC;IAEAF,GAAG,CAACQ,IAAI,CAACN,SAAS,CAAC;IACnBvG,CAAC,IAAIwG,gBAAgB;EACvB;EAEA,OAAOM,qBAAqB,CAACT,GAAG,CAAC;AACnC;;AAEA;AACA;AACA;AACA,IAAIU,oBAAoB,GAAG,MAAM;AAEjC,SAASD,qBAAqBA,CAAEE,UAAU,EAAE;EAC1C,IAAI/E,GAAG,GAAG+E,UAAU,CAACxH,MAAM;EAC3B,IAAIyC,GAAG,IAAI8E,oBAAoB,EAAE;IAC/B,OAAO1E,MAAM,CAAC4E,YAAY,CAACzD,KAAK,CAACnB,MAAM,EAAE2E,UAAU,CAAC,EAAC;EACvD;;EAEA;EACA,IAAIX,GAAG,GAAG,EAAE;EACZ,IAAIrG,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGiC,GAAG,EAAE;IACdoE,GAAG,IAAIhE,MAAM,CAAC4E,YAAY,CAACzD,KAAK,CAC9BnB,MAAM,EACN2E,UAAU,CAACd,KAAK,CAAClG,CAAC,EAAEA,CAAC,IAAI+G,oBAAoB,CAC/C,CAAC;EACH;EACA,OAAOV,GAAG;AACZ;AAEA,SAASjD,UAAUA,CAAEzB,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EACpC,IAAIkE,GAAG,GAAG,EAAE;EACZlE,GAAG,GAAGd,IAAI,CAACC,GAAG,CAACR,GAAG,CAACnC,MAAM,EAAEwD,GAAG,CAAC;EAE/B,KAAK,IAAIhD,CAAC,GAAG+C,KAAK,EAAE/C,CAAC,GAAGgD,GAAG,EAAEhD,CAAC,EAAE,EAAE;IAChCkH,GAAG,IAAI7E,MAAM,CAAC4E,YAAY,CAACtF,GAAG,CAAC3B,CAAC,CAAC,GAAG,IAAI,CAAC;EAC3C;EACA,OAAOkH,GAAG;AACZ;AAEA,SAAS7D,WAAWA,CAAE1B,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EACrC,IAAIkE,GAAG,GAAG,EAAE;EACZlE,GAAG,GAAGd,IAAI,CAACC,GAAG,CAACR,GAAG,CAACnC,MAAM,EAAEwD,GAAG,CAAC;EAE/B,KAAK,IAAIhD,CAAC,GAAG+C,KAAK,EAAE/C,CAAC,GAAGgD,GAAG,EAAEhD,CAAC,EAAE,EAAE;IAChCkH,GAAG,IAAI7E,MAAM,CAAC4E,YAAY,CAACtF,GAAG,CAAC3B,CAAC,CAAC,CAAC;EACpC;EACA,OAAOkH,GAAG;AACZ;AAEA,SAAShE,QAAQA,CAAEvB,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EAClC,IAAIf,GAAG,GAAGN,GAAG,CAACnC,MAAM;EAEpB,IAAI,CAACuD,KAAK,IAAIA,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC;EAClC,IAAI,CAACC,GAAG,IAAIA,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAGf,GAAG,EAAEe,GAAG,GAAGf,GAAG;EAE3C,IAAIkF,GAAG,GAAG,EAAE;EACZ,KAAK,IAAInH,CAAC,GAAG+C,KAAK,EAAE/C,CAAC,GAAGgD,GAAG,EAAEhD,CAAC,EAAE,EAAE;IAChCmH,GAAG,IAAIC,KAAK,CAACzF,GAAG,CAAC3B,CAAC,CAAC,CAAC;EACtB;EACA,OAAOmH,GAAG;AACZ;AAEA,SAAS5D,YAAYA,CAAE5B,GAAG,EAAEoB,KAAK,EAAEC,GAAG,EAAE;EACtC,IAAIqE,KAAK,GAAG1F,GAAG,CAACuE,KAAK,CAACnD,KAAK,EAAEC,GAAG,CAAC;EACjC,IAAIqD,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIrG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqH,KAAK,CAAC7H,MAAM,EAAEQ,CAAC,IAAI,CAAC,EAAE;IACxCqG,GAAG,IAAIhE,MAAM,CAAC4E,YAAY,CAACI,KAAK,CAACrH,CAAC,CAAC,GAAGqH,KAAK,CAACrH,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;EAC3D;EACA,OAAOqG,GAAG;AACZ;AAEAjI,MAAM,CAACgD,SAAS,CAAC8E,KAAK,GAAG,SAASA,KAAKA,CAAEnD,KAAK,EAAEC,GAAG,EAAE;EACnD,IAAIf,GAAG,GAAG,IAAI,CAACzC,MAAM;EACrBuD,KAAK,GAAG,CAAC,CAACA,KAAK;EACfC,GAAG,GAAGA,GAAG,KAAKrE,SAAS,GAAGsD,GAAG,GAAG,CAAC,CAACe,GAAG;EAErC,IAAID,KAAK,GAAG,CAAC,EAAE;IACbA,KAAK,IAAId,GAAG;IACZ,IAAIc,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC;EAC1B,CAAC,MAAM,IAAIA,KAAK,GAAGd,GAAG,EAAE;IACtBc,KAAK,GAAGd,GAAG;EACb;EAEA,IAAIe,GAAG,GAAG,CAAC,EAAE;IACXA,GAAG,IAAIf,GAAG;IACV,IAAIe,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC;EACtB,CAAC,MAAM,IAAIA,GAAG,GAAGf,GAAG,EAAE;IACpBe,GAAG,GAAGf,GAAG;EACX;EAEA,IAAIe,GAAG,GAAGD,KAAK,EAAEC,GAAG,GAAGD,KAAK;EAE5B,IAAIuE,MAAM;EACV,IAAIlJ,MAAM,CAACK,mBAAmB,EAAE;IAC9B6I,MAAM,GAAGlJ,MAAM,CAAC6C,QAAQ,CAAC,IAAI,CAAC/B,QAAQ,CAAC6D,KAAK,EAAEC,GAAG,CAAC,CAAC;EACrD,CAAC,MAAM;IACL,IAAIuE,QAAQ,GAAGvE,GAAG,GAAGD,KAAK;IAC1BuE,MAAM,GAAG,IAAIlJ,MAAM,CAACmJ,QAAQ,EAAE5I,SAAS,CAAC;IACxC,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuH,QAAQ,EAAEvH,CAAC,EAAE,EAAE;MACjCsH,MAAM,CAACtH,CAAC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG+C,KAAK,CAAC;IAC7B;EACF;EAEA,IAAIuE,MAAM,CAAC9H,MAAM,EAAE8H,MAAM,CAAC7H,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,IAAI;EAEtD,OAAO6H,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA,SAASE,WAAWA,CAAElD,MAAM,EAAEmD,GAAG,EAAEjI,MAAM,EAAE;EACzC,IAAK8E,MAAM,GAAG,CAAC,KAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI9C,UAAU,CAAC,oBAAoB,CAAC;EAChF,IAAI8C,MAAM,GAAGmD,GAAG,GAAGjI,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,uCAAuC,CAAC;AAC1F;AAEApD,MAAM,CAACgD,SAAS,CAACsG,UAAU,GAAG,SAASA,UAAUA,CAAEpD,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EAC/ErD,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAEnF,UAAU,EAAE,IAAI,CAACK,MAAM,CAAC;EAE3D,IAAIwE,GAAG,GAAG,IAAI,CAACM,MAAM,CAAC;EACtB,IAAIsD,GAAG,GAAG,CAAC;EACX,IAAI5H,CAAC,GAAG,CAAC;EACT,OAAO,EAAEA,CAAC,GAAGb,UAAU,KAAKyI,GAAG,IAAI,KAAK,CAAC,EAAE;IACzC5D,GAAG,IAAI,IAAI,CAACM,MAAM,GAAGtE,CAAC,CAAC,GAAG4H,GAAG;EAC/B;EAEA,OAAO5D,GAAG;AACZ,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACyG,UAAU,GAAG,SAASA,UAAUA,CAAEvD,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EAC/ErD,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAE;IACbH,WAAW,CAAClD,MAAM,EAAEnF,UAAU,EAAE,IAAI,CAACK,MAAM,CAAC;EAC9C;EAEA,IAAIwE,GAAG,GAAG,IAAI,CAACM,MAAM,GAAG,EAAEnF,UAAU,CAAC;EACrC,IAAIyI,GAAG,GAAG,CAAC;EACX,OAAOzI,UAAU,GAAG,CAAC,KAAKyI,GAAG,IAAI,KAAK,CAAC,EAAE;IACvC5D,GAAG,IAAI,IAAI,CAACM,MAAM,GAAG,EAAEnF,UAAU,CAAC,GAAGyI,GAAG;EAC1C;EAEA,OAAO5D,GAAG;AACZ,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACqD,SAAS,GAAG,SAASA,SAASA,CAAEH,MAAM,EAAEqD,QAAQ,EAAE;EACjE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAO,IAAI,CAAC8E,MAAM,CAAC;AACrB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC0G,YAAY,GAAG,SAASA,YAAYA,CAAExD,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAO,IAAI,CAAC8E,MAAM,CAAC,GAAI,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE;AAC/C,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC2G,YAAY,GAAG,SAASA,YAAYA,CAAEzD,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAQ,IAAI,CAAC8E,MAAM,CAAC,IAAI,CAAC,GAAI,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC;AAC/C,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC4G,YAAY,GAAG,SAASA,YAAYA,CAAE1D,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAElD,OAAO,CAAE,IAAI,CAAC8E,MAAM,CAAC,GAChB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACtB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG,IACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,GAAG,SAAU;AACpC,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC6G,YAAY,GAAG,SAASA,YAAYA,CAAE3D,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAElD,OAAQ,IAAI,CAAC8E,MAAM,CAAC,GAAG,SAAS,IAC5B,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,GACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,CAAC;AACrB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC8G,SAAS,GAAG,SAASA,SAASA,CAAE5D,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EAC7ErD,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAEnF,UAAU,EAAE,IAAI,CAACK,MAAM,CAAC;EAE3D,IAAIwE,GAAG,GAAG,IAAI,CAACM,MAAM,CAAC;EACtB,IAAIsD,GAAG,GAAG,CAAC;EACX,IAAI5H,CAAC,GAAG,CAAC;EACT,OAAO,EAAEA,CAAC,GAAGb,UAAU,KAAKyI,GAAG,IAAI,KAAK,CAAC,EAAE;IACzC5D,GAAG,IAAI,IAAI,CAACM,MAAM,GAAGtE,CAAC,CAAC,GAAG4H,GAAG;EAC/B;EACAA,GAAG,IAAI,IAAI;EAEX,IAAI5D,GAAG,IAAI4D,GAAG,EAAE5D,GAAG,IAAI9B,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,CAAC;EAElD,OAAO6E,GAAG;AACZ,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACgH,SAAS,GAAG,SAASA,SAASA,CAAE9D,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EAC7ErD,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAEnF,UAAU,EAAE,IAAI,CAACK,MAAM,CAAC;EAE3D,IAAIQ,CAAC,GAAGb,UAAU;EAClB,IAAIyI,GAAG,GAAG,CAAC;EACX,IAAI5D,GAAG,GAAG,IAAI,CAACM,MAAM,GAAG,EAAEtE,CAAC,CAAC;EAC5B,OAAOA,CAAC,GAAG,CAAC,KAAK4H,GAAG,IAAI,KAAK,CAAC,EAAE;IAC9B5D,GAAG,IAAI,IAAI,CAACM,MAAM,GAAG,EAAEtE,CAAC,CAAC,GAAG4H,GAAG;EACjC;EACAA,GAAG,IAAI,IAAI;EAEX,IAAI5D,GAAG,IAAI4D,GAAG,EAAE5D,GAAG,IAAI9B,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,CAAC;EAElD,OAAO6E,GAAG;AACZ,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACiH,QAAQ,GAAG,SAASA,QAAQA,CAAE/D,MAAM,EAAEqD,QAAQ,EAAE;EAC/D,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,IAAI,EAAE,IAAI,CAAC8E,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,OAAQ,IAAI,CAACA,MAAM,CAAC;EAChD,OAAQ,CAAC,IAAI,GAAG,IAAI,CAACA,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACkH,WAAW,GAAG,SAASA,WAAWA,CAAEhE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,IAAIwE,GAAG,GAAG,IAAI,CAACM,MAAM,CAAC,GAAI,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE;EAChD,OAAQN,GAAG,GAAG,MAAM,GAAIA,GAAG,GAAG,UAAU,GAAGA,GAAG;AAChD,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACmH,WAAW,GAAG,SAASA,WAAWA,CAAEjE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,IAAIwE,GAAG,GAAG,IAAI,CAACM,MAAM,GAAG,CAAC,CAAC,GAAI,IAAI,CAACA,MAAM,CAAC,IAAI,CAAE;EAChD,OAAQN,GAAG,GAAG,MAAM,GAAIA,GAAG,GAAG,UAAU,GAAGA,GAAG;AAChD,CAAC;AAED5F,MAAM,CAACgD,SAAS,CAACoH,WAAW,GAAG,SAASA,WAAWA,CAAElE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAElD,OAAQ,IAAI,CAAC8E,MAAM,CAAC,GACjB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACtB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG,GACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG;AAC5B,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACqH,WAAW,GAAG,SAASA,WAAWA,CAAEnE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAElD,OAAQ,IAAI,CAAC8E,MAAM,CAAC,IAAI,EAAE,GACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG,GACvB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACtB,IAAI,CAACA,MAAM,GAAG,CAAC,CAAE;AACtB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACsH,WAAW,GAAG,SAASA,WAAWA,CAAEpE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAOvB,OAAO,CAAC0K,IAAI,CAAC,IAAI,EAAErE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;AAChD,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACwH,WAAW,GAAG,SAASA,WAAWA,CAAEtE,MAAM,EAAEqD,QAAQ,EAAE;EACrE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAOvB,OAAO,CAAC0K,IAAI,CAAC,IAAI,EAAErE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACyH,YAAY,GAAG,SAASA,YAAYA,CAAEvE,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAOvB,OAAO,CAAC0K,IAAI,CAAC,IAAI,EAAErE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;AAChD,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC0H,YAAY,GAAG,SAASA,YAAYA,CAAExE,MAAM,EAAEqD,QAAQ,EAAE;EACvE,IAAI,CAACA,QAAQ,EAAEH,WAAW,CAAClD,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC9E,MAAM,CAAC;EAClD,OAAOvB,OAAO,CAAC0K,IAAI,CAAC,IAAI,EAAErE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,CAAC;AAED,SAASyE,QAAQA,CAAEpH,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAEmD,GAAG,EAAE7D,GAAG,EAAEzB,GAAG,EAAE;EACpD,IAAI,CAAC/D,MAAM,CAACiC,QAAQ,CAACsB,GAAG,CAAC,EAAE,MAAM,IAAInB,SAAS,CAAC,kCAAkC,CAAC;EAClF,IAAIwI,KAAK,GAAGpF,GAAG,IAAIoF,KAAK,GAAG7G,GAAG,EAAE,MAAM,IAAIX,UAAU,CAAC,wBAAwB,CAAC;EAC9E,IAAI8C,MAAM,GAAGmD,GAAG,GAAG9F,GAAG,CAACnC,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,oBAAoB,CAAC;AAC3E;AAEApD,MAAM,CAACgD,SAAS,CAAC6H,WAAW,GAAG,SAASA,WAAWA,CAAED,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EACxFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAE+C,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,CAAC,EAAE,CAAC,CAAC;EAExF,IAAIyI,GAAG,GAAG,CAAC;EACX,IAAI5H,CAAC,GAAG,CAAC;EACT,IAAI,CAACsE,MAAM,CAAC,GAAG0E,KAAK,GAAG,IAAI;EAC3B,OAAO,EAAEhJ,CAAC,GAAGb,UAAU,KAAKyI,GAAG,IAAI,KAAK,CAAC,EAAE;IACzC,IAAI,CAACtD,MAAM,GAAGtE,CAAC,CAAC,GAAIgJ,KAAK,GAAGpB,GAAG,GAAI,IAAI;EACzC;EAEA,OAAOtD,MAAM,GAAGnF,UAAU;AAC5B,CAAC;AAEDf,MAAM,CAACgD,SAAS,CAAC8H,WAAW,GAAG,SAASA,WAAWA,CAAEF,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EACxFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnBnF,UAAU,GAAGA,UAAU,GAAG,CAAC;EAC3B,IAAI,CAACwI,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAE+C,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,CAAC,EAAE,CAAC,CAAC;EAExF,IAAIa,CAAC,GAAGb,UAAU,GAAG,CAAC;EACtB,IAAIyI,GAAG,GAAG,CAAC;EACX,IAAI,CAACtD,MAAM,GAAGtE,CAAC,CAAC,GAAGgJ,KAAK,GAAG,IAAI;EAC/B,OAAO,EAAEhJ,CAAC,IAAI,CAAC,KAAK4H,GAAG,IAAI,KAAK,CAAC,EAAE;IACjC,IAAI,CAACtD,MAAM,GAAGtE,CAAC,CAAC,GAAIgJ,KAAK,GAAGpB,GAAG,GAAI,IAAI;EACzC;EAEA,OAAOtD,MAAM,GAAGnF,UAAU;AAC5B,CAAC;AAEDf,MAAM,CAACgD,SAAS,CAACwD,UAAU,GAAG,SAASA,UAAUA,CAAEoE,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC1EqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACxD,IAAI,CAAClG,MAAM,CAACK,mBAAmB,EAAEuK,KAAK,GAAG9G,IAAI,CAACiH,KAAK,CAACH,KAAK,CAAC;EAC1D,IAAI,CAAC1E,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;EAC7B,OAAO1E,MAAM,GAAG,CAAC;AACnB,CAAC;AAED,SAAS8E,iBAAiBA,CAAEzH,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE;EAC5D,IAAIL,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,MAAM,GAAGA,KAAK,GAAG,CAAC;EACzC,KAAK,IAAIhJ,CAAC,GAAG,CAAC,EAAEsJ,CAAC,GAAGpH,IAAI,CAACC,GAAG,CAACR,GAAG,CAACnC,MAAM,GAAG8E,MAAM,EAAE,CAAC,CAAC,EAAEtE,CAAC,GAAGsJ,CAAC,EAAEtJ,CAAC,EAAE,EAAE;IAChE2B,GAAG,CAAC2C,MAAM,GAAGtE,CAAC,CAAC,GAAG,CAACgJ,KAAK,GAAI,IAAI,IAAK,CAAC,IAAIK,YAAY,GAAGrJ,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAG,MACnE,CAACqJ,YAAY,GAAGrJ,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAI,CAAC;EAClC;AACF;AAEA5B,MAAM,CAACgD,SAAS,CAACmI,aAAa,GAAG,SAASA,aAAaA,CAAEP,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;EAC1D,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;IAC7B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;EAClC,CAAC,MAAM;IACLI,iBAAiB,CAAC,IAAI,EAAEJ,KAAK,EAAE1E,MAAM,EAAE,IAAI,CAAC;EAC9C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACoI,aAAa,GAAG,SAASA,aAAaA,CAAER,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;EAC1D,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAC5B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,GAAG,IAAK;EACnC,CAAC,MAAM;IACLI,iBAAiB,CAAC,IAAI,EAAEJ,KAAK,EAAE1E,MAAM,EAAE,KAAK,CAAC;EAC/C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAED,SAASmF,iBAAiBA,CAAE9H,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE;EAC5D,IAAIL,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,UAAU,GAAGA,KAAK,GAAG,CAAC;EAC7C,KAAK,IAAIhJ,CAAC,GAAG,CAAC,EAAEsJ,CAAC,GAAGpH,IAAI,CAACC,GAAG,CAACR,GAAG,CAACnC,MAAM,GAAG8E,MAAM,EAAE,CAAC,CAAC,EAAEtE,CAAC,GAAGsJ,CAAC,EAAEtJ,CAAC,EAAE,EAAE;IAChE2B,GAAG,CAAC2C,MAAM,GAAGtE,CAAC,CAAC,GAAIgJ,KAAK,KAAK,CAACK,YAAY,GAAGrJ,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAI,CAAC,GAAI,IAAI;EACrE;AACF;AAEA5B,MAAM,CAACgD,SAAS,CAACsI,aAAa,GAAG,SAASA,aAAaA,CAAEV,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;EAC9D,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;IACjC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;IACjC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAChC,IAAI,CAAC1E,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;EAC/B,CAAC,MAAM;IACLS,iBAAiB,CAAC,IAAI,EAAET,KAAK,EAAE1E,MAAM,EAAE,IAAI,CAAC;EAC9C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACuI,aAAa,GAAG,SAASA,aAAaA,CAAEX,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;EAC9D,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,KAAK,EAAG;IAC7B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;IACjC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAChC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,GAAG,IAAK;EACnC,CAAC,MAAM;IACLS,iBAAiB,CAAC,IAAI,EAAET,KAAK,EAAE1E,MAAM,EAAE,KAAK,CAAC;EAC/C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACwI,UAAU,GAAG,SAASA,UAAUA,CAAEZ,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EACtFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAE;IACb,IAAIkC,KAAK,GAAG3H,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,GAAG,CAAC,CAAC;IAE3C4J,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAE0K,KAAK,GAAG,CAAC,EAAE,CAACA,KAAK,CAAC;EAC9D;EAEA,IAAI7J,CAAC,GAAG,CAAC;EACT,IAAI4H,GAAG,GAAG,CAAC;EACX,IAAIkC,GAAG,GAAGd,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EAC3B,IAAI,CAAC1E,MAAM,CAAC,GAAG0E,KAAK,GAAG,IAAI;EAC3B,OAAO,EAAEhJ,CAAC,GAAGb,UAAU,KAAKyI,GAAG,IAAI,KAAK,CAAC,EAAE;IACzC,IAAI,CAACtD,MAAM,GAAGtE,CAAC,CAAC,GAAG,CAAEgJ,KAAK,GAAGpB,GAAG,IAAK,CAAC,IAAIkC,GAAG,GAAG,IAAI;EACtD;EAEA,OAAOxF,MAAM,GAAGnF,UAAU;AAC5B,CAAC;AAEDf,MAAM,CAACgD,SAAS,CAAC2I,UAAU,GAAG,SAASA,UAAUA,CAAEf,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAEwI,QAAQ,EAAE;EACtFqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAE;IACb,IAAIkC,KAAK,GAAG3H,IAAI,CAACiG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGhJ,UAAU,GAAG,CAAC,CAAC;IAE3C4J,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAEnF,UAAU,EAAE0K,KAAK,GAAG,CAAC,EAAE,CAACA,KAAK,CAAC;EAC9D;EAEA,IAAI7J,CAAC,GAAGb,UAAU,GAAG,CAAC;EACtB,IAAIyI,GAAG,GAAG,CAAC;EACX,IAAIkC,GAAG,GAAGd,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;EAC3B,IAAI,CAAC1E,MAAM,GAAGtE,CAAC,CAAC,GAAGgJ,KAAK,GAAG,IAAI;EAC/B,OAAO,EAAEhJ,CAAC,IAAI,CAAC,KAAK4H,GAAG,IAAI,KAAK,CAAC,EAAE;IACjC,IAAI,CAACtD,MAAM,GAAGtE,CAAC,CAAC,GAAG,CAAEgJ,KAAK,GAAGpB,GAAG,IAAK,CAAC,IAAIkC,GAAG,GAAG,IAAI;EACtD;EAEA,OAAOxF,MAAM,GAAGnF,UAAU;AAC5B,CAAC;AAEDf,MAAM,CAACgD,SAAS,CAAC4I,SAAS,GAAG,SAASA,SAASA,CAAEhB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EACxEqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC;EAC5D,IAAI,CAAClG,MAAM,CAACK,mBAAmB,EAAEuK,KAAK,GAAG9G,IAAI,CAACiH,KAAK,CAACH,KAAK,CAAC;EAC1D,IAAIA,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,IAAI,GAAGA,KAAK,GAAG,CAAC;EACvC,IAAI,CAAC1E,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;EAC7B,OAAO1E,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC6I,YAAY,GAAG,SAASA,YAAYA,CAAEjB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9EqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;EAChE,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;IAC7B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;EAClC,CAAC,MAAM;IACLI,iBAAiB,CAAC,IAAI,EAAEJ,KAAK,EAAE1E,MAAM,EAAE,IAAI,CAAC;EAC9C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC8I,YAAY,GAAG,SAASA,YAAYA,CAAElB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9EqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC;EAChE,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAC5B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,GAAG,IAAK;EACnC,CAAC,MAAM;IACLI,iBAAiB,CAAC,IAAI,EAAEJ,KAAK,EAAE1E,MAAM,EAAE,KAAK,CAAC;EAC/C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAAC+I,YAAY,GAAG,SAASA,YAAYA,CAAEnB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9EqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC;EACxE,IAAIlG,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,GAAG,IAAK;IAC7B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAChC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;IACjC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;EACnC,CAAC,MAAM;IACLS,iBAAiB,CAAC,IAAI,EAAET,KAAK,EAAE1E,MAAM,EAAE,IAAI,CAAC;EAC9C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAEDlG,MAAM,CAACgD,SAAS,CAACgJ,YAAY,GAAG,SAASA,YAAYA,CAAEpB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9EqB,KAAK,GAAG,CAACA,KAAK;EACd1E,MAAM,GAAGA,MAAM,GAAG,CAAC;EACnB,IAAI,CAACqD,QAAQ,EAAEoB,QAAQ,CAAC,IAAI,EAAEC,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,UAAU,CAAC;EACxE,IAAI0E,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,UAAU,GAAGA,KAAK,GAAG,CAAC;EAC7C,IAAI5K,MAAM,CAACK,mBAAmB,EAAE;IAC9B,IAAI,CAAC6F,MAAM,CAAC,GAAI0E,KAAK,KAAK,EAAG;IAC7B,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,EAAG;IACjC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,KAAK,CAAE;IAChC,IAAI,CAAC1E,MAAM,GAAG,CAAC,CAAC,GAAI0E,KAAK,GAAG,IAAK;EACnC,CAAC,MAAM;IACLS,iBAAiB,CAAC,IAAI,EAAET,KAAK,EAAE1E,MAAM,EAAE,KAAK,CAAC;EAC/C;EACA,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;AAED,SAAS+F,YAAYA,CAAE1I,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAEmD,GAAG,EAAE7D,GAAG,EAAEzB,GAAG,EAAE;EACxD,IAAI6G,KAAK,GAAGpF,GAAG,IAAIoF,KAAK,GAAG7G,GAAG,EAAE,MAAM,IAAIX,UAAU,CAAC,wBAAwB,CAAC;EAC9E,IAAI8C,MAAM,GAAGmD,GAAG,GAAG9F,GAAG,CAACnC,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,oBAAoB,CAAC;EACzE,IAAI8C,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI9C,UAAU,CAAC,oBAAoB,CAAC;AAC5D;AAEA,SAAS8I,UAAUA,CAAE3I,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE1B,QAAQ,EAAE;EAC/D,IAAI,CAACA,QAAQ,EAAE;IACb0C,YAAY,CAAC1I,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,sBAAsB,EAAE,CAAC,sBAAsB,CAAC;EACtF;EACArG,OAAO,CAACkC,KAAK,CAACwB,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;EACtD,OAAO/E,MAAM,GAAG,CAAC;AACnB;AAEAlG,MAAM,CAACgD,SAAS,CAACmJ,YAAY,GAAG,SAASA,YAAYA,CAAEvB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9E,OAAO2C,UAAU,CAAC,IAAI,EAAEtB,KAAK,EAAE1E,MAAM,EAAE,IAAI,EAAEqD,QAAQ,CAAC;AACxD,CAAC;AAEDvJ,MAAM,CAACgD,SAAS,CAACoJ,YAAY,GAAG,SAASA,YAAYA,CAAExB,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAC9E,OAAO2C,UAAU,CAAC,IAAI,EAAEtB,KAAK,EAAE1E,MAAM,EAAE,KAAK,EAAEqD,QAAQ,CAAC;AACzD,CAAC;AAED,SAAS8C,WAAWA,CAAE9I,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE1B,QAAQ,EAAE;EAChE,IAAI,CAACA,QAAQ,EAAE;IACb0C,YAAY,CAAC1I,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE,CAAC,EAAE,uBAAuB,EAAE,CAAC,uBAAuB,CAAC;EACxF;EACArG,OAAO,CAACkC,KAAK,CAACwB,GAAG,EAAEqH,KAAK,EAAE1E,MAAM,EAAE+E,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;EACtD,OAAO/E,MAAM,GAAG,CAAC;AACnB;AAEAlG,MAAM,CAACgD,SAAS,CAACsJ,aAAa,GAAG,SAASA,aAAaA,CAAE1B,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChF,OAAO8C,WAAW,CAAC,IAAI,EAAEzB,KAAK,EAAE1E,MAAM,EAAE,IAAI,EAAEqD,QAAQ,CAAC;AACzD,CAAC;AAEDvJ,MAAM,CAACgD,SAAS,CAACuJ,aAAa,GAAG,SAASA,aAAaA,CAAE3B,KAAK,EAAE1E,MAAM,EAAEqD,QAAQ,EAAE;EAChF,OAAO8C,WAAW,CAAC,IAAI,EAAEzB,KAAK,EAAE1E,MAAM,EAAE,KAAK,EAAEqD,QAAQ,CAAC;AAC1D,CAAC;;AAED;AACAvJ,MAAM,CAACgD,SAAS,CAACL,IAAI,GAAG,SAASA,IAAIA,CAAE6J,MAAM,EAAEC,WAAW,EAAE9H,KAAK,EAAEC,GAAG,EAAE;EACtE,IAAI,CAACD,KAAK,EAAEA,KAAK,GAAG,CAAC;EACrB,IAAI,CAACC,GAAG,IAAIA,GAAG,KAAK,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACxD,MAAM;EACxC,IAAIqL,WAAW,IAAID,MAAM,CAACpL,MAAM,EAAEqL,WAAW,GAAGD,MAAM,CAACpL,MAAM;EAC7D,IAAI,CAACqL,WAAW,EAAEA,WAAW,GAAG,CAAC;EACjC,IAAI7H,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAGD,KAAK,EAAEC,GAAG,GAAGD,KAAK;;EAEvC;EACA,IAAIC,GAAG,KAAKD,KAAK,EAAE,OAAO,CAAC;EAC3B,IAAI6H,MAAM,CAACpL,MAAM,KAAK,CAAC,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;;EAEtD;EACA,IAAIqL,WAAW,GAAG,CAAC,EAAE;IACnB,MAAM,IAAIrJ,UAAU,CAAC,2BAA2B,CAAC;EACnD;EACA,IAAIuB,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACvD,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,2BAA2B,CAAC;EACxF,IAAIwB,GAAG,GAAG,CAAC,EAAE,MAAM,IAAIxB,UAAU,CAAC,yBAAyB,CAAC;;EAE5D;EACA,IAAIwB,GAAG,GAAG,IAAI,CAACxD,MAAM,EAAEwD,GAAG,GAAG,IAAI,CAACxD,MAAM;EACxC,IAAIoL,MAAM,CAACpL,MAAM,GAAGqL,WAAW,GAAG7H,GAAG,GAAGD,KAAK,EAAE;IAC7CC,GAAG,GAAG4H,MAAM,CAACpL,MAAM,GAAGqL,WAAW,GAAG9H,KAAK;EAC3C;EAEA,IAAId,GAAG,GAAGe,GAAG,GAAGD,KAAK;EACrB,IAAI/C,CAAC;EAEL,IAAI,IAAI,KAAK4K,MAAM,IAAI7H,KAAK,GAAG8H,WAAW,IAAIA,WAAW,GAAG7H,GAAG,EAAE;IAC/D;IACA,KAAKhD,CAAC,GAAGiC,GAAG,GAAG,CAAC,EAAEjC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC7B4K,MAAM,CAAC5K,CAAC,GAAG6K,WAAW,CAAC,GAAG,IAAI,CAAC7K,CAAC,GAAG+C,KAAK,CAAC;IAC3C;EACF,CAAC,MAAM,IAAId,GAAG,GAAG,IAAI,IAAI,CAAC7D,MAAM,CAACK,mBAAmB,EAAE;IACpD;IACA,KAAKuB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,GAAG,EAAEjC,CAAC,EAAE,EAAE;MACxB4K,MAAM,CAAC5K,CAAC,GAAG6K,WAAW,CAAC,GAAG,IAAI,CAAC7K,CAAC,GAAG+C,KAAK,CAAC;IAC3C;EACF,CAAC,MAAM;IACL6H,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC5L,QAAQ,CAAC6D,KAAK,EAAEA,KAAK,GAAGd,GAAG,CAAC,EAAE4I,WAAW,CAAC;EAC7D;EAEA,OAAO5I,GAAG;AACZ,CAAC;;AAED;AACA7D,MAAM,CAACgD,SAAS,CAAC2J,IAAI,GAAG,SAASA,IAAIA,CAAE/B,KAAK,EAAEjG,KAAK,EAAEC,GAAG,EAAE;EACxD,IAAI,CAACgG,KAAK,EAAEA,KAAK,GAAG,CAAC;EACrB,IAAI,CAACjG,KAAK,EAAEA,KAAK,GAAG,CAAC;EACrB,IAAI,CAACC,GAAG,EAAEA,GAAG,GAAG,IAAI,CAACxD,MAAM;EAE3B,IAAIwD,GAAG,GAAGD,KAAK,EAAE,MAAM,IAAIvB,UAAU,CAAC,aAAa,CAAC;;EAEpD;EACA,IAAIwB,GAAG,KAAKD,KAAK,EAAE;EACnB,IAAI,IAAI,CAACvD,MAAM,KAAK,CAAC,EAAE;EAEvB,IAAIuD,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACvD,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,qBAAqB,CAAC;EAClF,IAAIwB,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,IAAI,CAACxD,MAAM,EAAE,MAAM,IAAIgC,UAAU,CAAC,mBAAmB,CAAC;EAE3E,IAAIxB,CAAC;EACL,IAAI,OAAOgJ,KAAK,KAAK,QAAQ,EAAE;IAC7B,KAAKhJ,CAAC,GAAG+C,KAAK,EAAE/C,CAAC,GAAGgD,GAAG,EAAEhD,CAAC,EAAE,EAAE;MAC5B,IAAI,CAACA,CAAC,CAAC,GAAGgJ,KAAK;IACjB;EACF,CAAC,MAAM;IACL,IAAI3B,KAAK,GAAGzE,WAAW,CAACoG,KAAK,CAACvH,QAAQ,CAAC,CAAC,CAAC;IACzC,IAAIQ,GAAG,GAAGoF,KAAK,CAAC7H,MAAM;IACtB,KAAKQ,CAAC,GAAG+C,KAAK,EAAE/C,CAAC,GAAGgD,GAAG,EAAEhD,CAAC,EAAE,EAAE;MAC5B,IAAI,CAACA,CAAC,CAAC,GAAGqH,KAAK,CAACrH,CAAC,GAAGiC,GAAG,CAAC;IAC1B;EACF;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA7D,MAAM,CAACgD,SAAS,CAAC4J,aAAa,GAAG,SAASA,aAAaA,CAAA,EAAI;EACzD,IAAI,OAAOjM,UAAU,KAAK,WAAW,EAAE;IACrC,IAAIX,MAAM,CAACK,mBAAmB,EAAE;MAC9B,OAAQ,IAAIL,MAAM,CAAC,IAAI,CAAC,CAAEsC,MAAM;IAClC,CAAC,MAAM;MACL,IAAIiB,GAAG,GAAG,IAAI5C,UAAU,CAAC,IAAI,CAACS,MAAM,CAAC;MACrC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEiC,GAAG,GAAGN,GAAG,CAACnC,MAAM,EAAEQ,CAAC,GAAGiC,GAAG,EAAEjC,CAAC,IAAI,CAAC,EAAE;QACjD2B,GAAG,CAAC3B,CAAC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC;MAClB;MACA,OAAO2B,GAAG,CAACjB,MAAM;IACnB;EACF,CAAC,MAAM;IACL,MAAM,IAAIF,SAAS,CAAC,oDAAoD,CAAC;EAC3E;AACF,CAAC;;AAED;AACA;;AAEA,IAAIyK,EAAE,GAAG7M,MAAM,CAACgD,SAAS;;AAEzB;AACA;AACA;AACAhD,MAAM,CAAC6C,QAAQ,GAAG,SAASA,QAAQA,CAAEnC,GAAG,EAAE;EACxCA,GAAG,CAACG,WAAW,GAAGb,MAAM;EACxBU,GAAG,CAACwC,SAAS,GAAG,IAAI;;EAEpB;EACAxC,GAAG,CAACgM,IAAI,GAAGhM,GAAG,CAAC4F,GAAG;;EAElB;EACA5F,GAAG,CAACuF,GAAG,GAAG4G,EAAE,CAAC5G,GAAG;EAChBvF,GAAG,CAAC4F,GAAG,GAAGuG,EAAE,CAACvG,GAAG;EAEhB5F,GAAG,CAACqB,KAAK,GAAG8K,EAAE,CAAC9K,KAAK;EACpBrB,GAAG,CAAC2C,QAAQ,GAAGwJ,EAAE,CAACxJ,QAAQ;EAC1B3C,GAAG,CAACoM,cAAc,GAAGD,EAAE,CAACxJ,QAAQ;EAChC3C,GAAG,CAACkH,MAAM,GAAGiF,EAAE,CAACjF,MAAM;EACtBlH,GAAG,CAAC2E,MAAM,GAAGwH,EAAE,CAACxH,MAAM;EACtB3E,GAAG,CAAC+C,OAAO,GAAGoJ,EAAE,CAACpJ,OAAO;EACxB/C,GAAG,CAACiF,OAAO,GAAGkH,EAAE,CAAClH,OAAO;EACxBjF,GAAG,CAACiC,IAAI,GAAGkK,EAAE,CAAClK,IAAI;EAClBjC,GAAG,CAACoH,KAAK,GAAG+E,EAAE,CAAC/E,KAAK;EACpBpH,GAAG,CAAC4I,UAAU,GAAGuD,EAAE,CAACvD,UAAU;EAC9B5I,GAAG,CAAC+I,UAAU,GAAGoD,EAAE,CAACpD,UAAU;EAC9B/I,GAAG,CAAC2F,SAAS,GAAGwG,EAAE,CAACxG,SAAS;EAC5B3F,GAAG,CAACgJ,YAAY,GAAGmD,EAAE,CAACnD,YAAY;EAClChJ,GAAG,CAACiJ,YAAY,GAAGkD,EAAE,CAAClD,YAAY;EAClCjJ,GAAG,CAACkJ,YAAY,GAAGiD,EAAE,CAACjD,YAAY;EAClClJ,GAAG,CAACmJ,YAAY,GAAGgD,EAAE,CAAChD,YAAY;EAClCnJ,GAAG,CAACoJ,SAAS,GAAG+C,EAAE,CAAC/C,SAAS;EAC5BpJ,GAAG,CAACsJ,SAAS,GAAG6C,EAAE,CAAC7C,SAAS;EAC5BtJ,GAAG,CAACuJ,QAAQ,GAAG4C,EAAE,CAAC5C,QAAQ;EAC1BvJ,GAAG,CAACwJ,WAAW,GAAG2C,EAAE,CAAC3C,WAAW;EAChCxJ,GAAG,CAACyJ,WAAW,GAAG0C,EAAE,CAAC1C,WAAW;EAChCzJ,GAAG,CAAC0J,WAAW,GAAGyC,EAAE,CAACzC,WAAW;EAChC1J,GAAG,CAAC2J,WAAW,GAAGwC,EAAE,CAACxC,WAAW;EAChC3J,GAAG,CAAC4J,WAAW,GAAGuC,EAAE,CAACvC,WAAW;EAChC5J,GAAG,CAAC8J,WAAW,GAAGqC,EAAE,CAACrC,WAAW;EAChC9J,GAAG,CAAC+J,YAAY,GAAGoC,EAAE,CAACpC,YAAY;EAClC/J,GAAG,CAACgK,YAAY,GAAGmC,EAAE,CAACnC,YAAY;EAClChK,GAAG,CAAC8F,UAAU,GAAGqG,EAAE,CAACrG,UAAU;EAC9B9F,GAAG,CAACmK,WAAW,GAAGgC,EAAE,CAAChC,WAAW;EAChCnK,GAAG,CAACoK,WAAW,GAAG+B,EAAE,CAAC/B,WAAW;EAChCpK,GAAG,CAACyK,aAAa,GAAG0B,EAAE,CAAC1B,aAAa;EACpCzK,GAAG,CAAC0K,aAAa,GAAGyB,EAAE,CAACzB,aAAa;EACpC1K,GAAG,CAAC4K,aAAa,GAAGuB,EAAE,CAACvB,aAAa;EACpC5K,GAAG,CAAC6K,aAAa,GAAGsB,EAAE,CAACtB,aAAa;EACpC7K,GAAG,CAAC8K,UAAU,GAAGqB,EAAE,CAACrB,UAAU;EAC9B9K,GAAG,CAACiL,UAAU,GAAGkB,EAAE,CAAClB,UAAU;EAC9BjL,GAAG,CAACkL,SAAS,GAAGiB,EAAE,CAACjB,SAAS;EAC5BlL,GAAG,CAACmL,YAAY,GAAGgB,EAAE,CAAChB,YAAY;EAClCnL,GAAG,CAACoL,YAAY,GAAGe,EAAE,CAACf,YAAY;EAClCpL,GAAG,CAACqL,YAAY,GAAGc,EAAE,CAACd,YAAY;EAClCrL,GAAG,CAACsL,YAAY,GAAGa,EAAE,CAACb,YAAY;EAClCtL,GAAG,CAACyL,YAAY,GAAGU,EAAE,CAACV,YAAY;EAClCzL,GAAG,CAAC0L,YAAY,GAAGS,EAAE,CAACT,YAAY;EAClC1L,GAAG,CAAC4L,aAAa,GAAGO,EAAE,CAACP,aAAa;EACpC5L,GAAG,CAAC6L,aAAa,GAAGM,EAAE,CAACN,aAAa;EACpC7L,GAAG,CAACiM,IAAI,GAAGE,EAAE,CAACF,IAAI;EAClBjM,GAAG,CAAC4E,OAAO,GAAGuH,EAAE,CAACvH,OAAO;EACxB5E,GAAG,CAACkM,aAAa,GAAGC,EAAE,CAACD,aAAa;EAEpC,OAAOlM,GAAG;AACZ,CAAC;AAED,IAAIqM,iBAAiB,GAAG,oBAAoB;AAE5C,SAASC,WAAWA,CAAEzH,GAAG,EAAE;EACzB;EACAA,GAAG,GAAG0H,UAAU,CAAC1H,GAAG,CAAC,CAAC2H,OAAO,CAACH,iBAAiB,EAAE,EAAE,CAAC;EACpD;EACA,IAAIxH,GAAG,CAACnE,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE;EAC7B;EACA,OAAOmE,GAAG,CAACnE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC3BmE,GAAG,GAAGA,GAAG,GAAG,GAAG;EACjB;EACA,OAAOA,GAAG;AACZ;AAEA,SAAS0H,UAAUA,CAAE1H,GAAG,EAAE;EACxB,IAAIA,GAAG,CAAC4H,IAAI,EAAE,OAAO5H,GAAG,CAAC4H,IAAI,CAAC,CAAC;EAC/B,OAAO5H,GAAG,CAAC2H,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AACtC;AAEA,SAASlE,KAAKA,CAAEoE,CAAC,EAAE;EACjB,IAAIA,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,GAAGA,CAAC,CAAC/J,QAAQ,CAAC,EAAE,CAAC;EACvC,OAAO+J,CAAC,CAAC/J,QAAQ,CAAC,EAAE,CAAC;AACvB;AAEA,SAASmB,WAAWA,CAAE3C,MAAM,EAAEwL,KAAK,EAAE;EACnCA,KAAK,GAAGA,KAAK,IAAIxI,QAAQ;EACzB,IAAIsD,SAAS;EACb,IAAI/G,MAAM,GAAGS,MAAM,CAACT,MAAM;EAC1B,IAAIkM,aAAa,GAAG,IAAI;EACxB,IAAIrE,KAAK,GAAG,EAAE;EAEd,KAAK,IAAIrH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,EAAE,EAAE;IAC/BuG,SAAS,GAAGtG,MAAM,CAAC0L,UAAU,CAAC3L,CAAC,CAAC;;IAEhC;IACA,IAAIuG,SAAS,GAAG,MAAM,IAAIA,SAAS,GAAG,MAAM,EAAE;MAC5C;MACA,IAAI,CAACmF,aAAa,EAAE;QAClB;QACA,IAAInF,SAAS,GAAG,MAAM,EAAE;UACtB;UACA,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEpE,KAAK,CAACR,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;UACnD;QACF,CAAC,MAAM,IAAI7G,CAAC,GAAG,CAAC,KAAKR,MAAM,EAAE;UAC3B;UACA,IAAI,CAACiM,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEpE,KAAK,CAACR,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;UACnD;QACF;;QAEA;QACA6E,aAAa,GAAGnF,SAAS;QAEzB;MACF;;MAEA;MACA,IAAIA,SAAS,GAAG,MAAM,EAAE;QACtB,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEpE,KAAK,CAACR,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACnD6E,aAAa,GAAGnF,SAAS;QACzB;MACF;;MAEA;MACAA,SAAS,GAAG,CAACmF,aAAa,GAAG,MAAM,IAAI,EAAE,GAAGnF,SAAS,GAAG,MAAM,IAAI,OAAO;IAC3E,CAAC,MAAM,IAAImF,aAAa,EAAE;MACxB;MACA,IAAI,CAACD,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEpE,KAAK,CAACR,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACrD;IAEA6E,aAAa,GAAG,IAAI;;IAEpB;IACA,IAAInF,SAAS,GAAG,IAAI,EAAE;MACpB,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBpE,KAAK,CAACR,IAAI,CAACN,SAAS,CAAC;IACvB,CAAC,MAAM,IAAIA,SAAS,GAAG,KAAK,EAAE;MAC5B,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBpE,KAAK,CAACR,IAAI,CACRN,SAAS,IAAI,GAAG,GAAG,IAAI,EACvBA,SAAS,GAAG,IAAI,GAAG,IACrB,CAAC;IACH,CAAC,MAAM,IAAIA,SAAS,GAAG,OAAO,EAAE;MAC9B,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBpE,KAAK,CAACR,IAAI,CACRN,SAAS,IAAI,GAAG,GAAG,IAAI,EACvBA,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9BA,SAAS,GAAG,IAAI,GAAG,IACrB,CAAC;IACH,CAAC,MAAM,IAAIA,SAAS,GAAG,QAAQ,EAAE;MAC/B,IAAI,CAACkF,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;MACtBpE,KAAK,CAACR,IAAI,CACRN,SAAS,IAAI,IAAI,GAAG,IAAI,EACxBA,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9BA,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAC9BA,SAAS,GAAG,IAAI,GAAG,IACrB,CAAC;IACH,CAAC,MAAM;MACL,MAAM,IAAItB,KAAK,CAAC,oBAAoB,CAAC;IACvC;EACF;EAEA,OAAOoC,KAAK;AACd;AAEA,SAAS5B,YAAYA,CAAE9B,GAAG,EAAE;EAC1B,IAAIiI,SAAS,GAAG,EAAE;EAClB,KAAK,IAAI5L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,GAAG,CAACnE,MAAM,EAAEQ,CAAC,EAAE,EAAE;IACnC;IACA4L,SAAS,CAAC/E,IAAI,CAAClD,GAAG,CAACgI,UAAU,CAAC3L,CAAC,CAAC,GAAG,IAAI,CAAC;EAC1C;EACA,OAAO4L,SAAS;AAClB;AAEA,SAAS/F,cAAcA,CAAElC,GAAG,EAAE8H,KAAK,EAAE;EACnC,IAAII,CAAC,EAAEC,EAAE,EAAEC,EAAE;EACb,IAAIH,SAAS,GAAG,EAAE;EAClB,KAAK,IAAI5L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,GAAG,CAACnE,MAAM,EAAEQ,CAAC,EAAE,EAAE;IACnC,IAAI,CAACyL,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;IAEtBI,CAAC,GAAGlI,GAAG,CAACgI,UAAU,CAAC3L,CAAC,CAAC;IACrB8L,EAAE,GAAGD,CAAC,IAAI,CAAC;IACXE,EAAE,GAAGF,CAAC,GAAG,GAAG;IACZD,SAAS,CAAC/E,IAAI,CAACkF,EAAE,CAAC;IAClBH,SAAS,CAAC/E,IAAI,CAACiF,EAAE,CAAC;EACpB;EAEA,OAAOF,SAAS;AAClB;AAEA,SAAS/I,aAAaA,CAAEc,GAAG,EAAE;EAC3B,OAAO5F,MAAM,CAACiO,WAAW,CAACZ,WAAW,CAACzH,GAAG,CAAC,CAAC;AAC7C;AAEA,SAAS4B,UAAUA,CAAE0G,GAAG,EAAEC,GAAG,EAAE5H,MAAM,EAAE9E,MAAM,EAAE;EAC7C,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,EAAE,EAAE;IAC/B,IAAKA,CAAC,GAAGsE,MAAM,IAAI4H,GAAG,CAAC1M,MAAM,IAAMQ,CAAC,IAAIiM,GAAG,CAACzM,MAAO,EAAE;IACrD0M,GAAG,CAAClM,CAAC,GAAGsE,MAAM,CAAC,GAAG2H,GAAG,CAACjM,CAAC,CAAC;EAC1B;EACA,OAAOA,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}